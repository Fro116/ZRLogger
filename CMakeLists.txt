cmake_minimum_required(VERSION 2.8.11)

project(ZRLogger)	       
set(COMMON_INCLUDES "Abstract Graphics" "Abstract States" "States" "Utility" "Object Recognition")
set(COMMON_SOURCES "Abstract Graphics/OpenGLUtility.cpp" "Abstract States/Drawable.cpp" "Abstract Graphics/SOIL.c" "Abstract Graphics/image_DXT.c" "Abstract States/GameEngine.cpp" "Abstract States/GameDriver.cpp" "Abstract Graphics/image_helper.c" "Abstract States/Movable.cpp" "Abstract Graphics/stb_image_aug.c" "States/OverworldState.cpp" "States/DungeonState.cpp" "States/DungeonMarker.cpp" "States/TriforceMarker.cpp" "States/ItemMarker.cpp" "States/BonusCaveMarker.cpp" "States/HeartMarker.cpp" "States/DungeonDoor.cpp" "States/ZeldaFindingScreen.cpp" "States/OverworldMarker.cpp" "States/DungeonSelector.cpp" "States/OverworldSelector.cpp" "States/ZRDriver.cpp" "Abstract Graphics/OpenGLRectangle.cpp" "Object Recognition/ZeldaImageProcessor.cpp" "Object Recognition/ZeldaInformationHandler.cpp" "Object Recognition/lodepng.cpp")
set(CMAKE_CXX_FLAGS "-std=c++11 -O2")

if (MSVC)
  set_target_properties(ZRLogger PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR})
  set_target_properties(ZRLogger PROPERTIES RUNTIME_OUTPUT_DIRECTORY_DEBUG ${CMAKE_SOURCE_DIR})
  set_target_properties(ZRLogger PROPERTIES RUNTIME_OUTPUT_DIRECTORY_RELEASE ${CMAKE_SOURCE_DIR})
endif (MSVC)

if (APPLE)
  set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_SOURCE_DIR})
  set(APPLE_SOURCES "Apple/main.cpp" "Object Recognition/Apple/ImageHandler.cpp")
  set(APPLE_INCLUDES "Object Recognition/Apple")
  add_executable(ZRLogger ${COMMON_SOURCES} ${APPLE_SOURCES})
  include_directories(${COMMON_INCLUDES} ${APPLE_INCLUDES})
  find_library(CORE_FOUNDATION CoreFoundation)
  target_link_libraries(ZRLogger ${CORE_FOUNDATION})
  find_library(GLEW glew)
  target_link_libraries(ZRLogger ${GLEW})
  find_library(GLFW3 glfw3)
  target_link_libraries(ZRLogger ${GLFW3})
  find_library(OPENGL OpenGL)
  target_link_libraries(ZRLogger ${OPENGL})
  find_library(APP_SER ApplicationServices)
  target_link_libraries(ZRLogger ${APP_SER})
endif (APPLE)

if (WIN32)
  set(WINDOWS_SOURCES "Windows/main.cpp" "Object Recognition/Windows/ImageHandler.cpp")
  set(WINDOWS_INCLUDES "Object Recognition/Windows")
  add_executable(ZRLogger ${COMMON_SOURCES} ${WINDOWS_SOURCES})
  find_package(OpenGL REQUIRED)
  add_subdirectory (external)
  set(EXTERNAL_INCLUDES external/glfw-3.1.2/include/ external/glm-0.9.7.1/ external/glew-1.13.0/include/)
  include_directories(${COMMON_INCLUDES} ${WINDOWS_INCLUDES} ${EXTERNAL_INCLUDES})    
  set(ALL_LIBS ${OPENGL_LIBRARY} glfw GLEW_1130)
  add_definitions(-DTW_STATIC -DTW_NO_LIB_PRAGMA -DTW_NO_DIRECT3D -DGLEW_STATIC -D_CRT_SECURE_NO_WARNINGS -DWIN32)
  target_link_libraries(ZRLogger ${ALL_LIBS})
endif (WIN32)
